apply plugin: 'scala'

buildDir = 'build-2.13'

clean {
    delete 'build-2.13'
}

sourceSets {
    main.scala.srcDirs += [file('src/main/scala-2-'), file('src/main/scala-2.13+')]
}

dependencies {
    api project(':xpath-to-xml-core')

    implementation libs.scala.library.v213
    implementation libs.scala.reflect.v213
    implementation libs.scala.xml.v213

    scalaCompilerPlugins libs.wartremover.v213

    testImplementation project(':xpath-to-xml-test')
    testImplementation libs.bundles.scalatest.v213
}

javadocJar {
    dependsOn scaladoc
    from scaladoc
}

spotless {
    scala {
        scalafmt('3.7.9').configFile('.scalafmt.conf')
        licenseHeaderFile rootProject.file('gradle/license.header'), "package "
    }
}

scala {
    zincVersion = '1.9.0'
}

scaladoc {
    scalaDocOptions.with {
        additionalParameters = [
                '-language:experimental.macros',     // Allow macro definition (besides implementation and application)
                '-language:implicitConversions',     // Allow definition of implicit functions called views
        ]
    }
}

tasks.withType(ScalaCompile).configureEach {
    scalaCompileOptions.with {
        deprecation = true
        encoding = 'UTF-8'
        additionalParameters = [
                '-explaintypes',                     // Explain type errors in more detail.
                '-feature',                          // Emit warning and location for usages of features that should be imported explicitly.
                '-language:experimental.macros',     // Allow macro definition (besides implementation and application)
                '-language:implicitConversions',     // Allow definition of implicit functions called views
                '-unchecked',                        // Enable additional warnings where generated code depends on assumptions.
                '-Xcheckinit',                       // Wrap field accessors to throw an exception on uninitialized access.
                '-Xfatal-warnings',                  // Fail the compilation if there are any warnings.
                '-Xlint:adapted-args',               // Warn if an argument list is modified to match the receiver.
                '-Xlint:constant',                   // Evaluation of a constant arithmetic expression results in an error.
                '-Xlint:delayedinit-select',         // Selecting member of DelayedInit.
                '-Xlint:deprecation',                // Emit warning and location for usages of deprecated APIs.
                '-Xlint:doc-detached',               // A Scaladoc comment appears to be detached from its element.
                '-Xlint:inaccessible',               // Warn about inaccessible types in method signatures.
                '-Xlint:infer-any',                  // Warn when a type argument is inferred to be `Any`.
                '-Xlint:missing-interpolator',       // A string literal appears to be missing an interpolator id.
                '-Xlint:nullary-unit',               // Warn when nullary methods return Unit.
                '-Xlint:option-implicit',            // Option.apply used implicit view.
                '-Xlint:package-object-classes',     // Class or object defined in package object.
                '-Xlint:poly-implicit-overload',     // Parameterized overloaded implicit methods are not visible as view bounds.
                '-Xlint:private-shadow',             // A private field (or class parameter) shadows a superclass field.
                '-Xlint:stars-align',                // Pattern sequence wildcard must align with sequence component.
                '-Xlint:strict-unsealed-patmat',     // Warn when a pattern match on an unsealed type may not be exhaustive
                '-Xlint:type-parameter-shadow',      // A local type parameter shadows a type already in scope.
                '-Xlint:-byname-implicit',           // This conflicts with generic derivation used via shapeless
                '-Wdead-code',                       // Warn when dead code is identified.
                '-Wnumeric-widen',                   // Warn when numerics are widened.
                '-Xsource:3',                        // Turn on future language features.
                '-release:8',
                '-opt:l:method',
                '-opt:l:inline',
                '-opt-inline-from:com.github.simy4.xpath.scala.navigator.**,com.github.simy4.xpath.scala.syntax.**',
                '-P:wartremover:only-warn-traverser:org.wartremover.warts.Unsafe',
        ]
    }
}
