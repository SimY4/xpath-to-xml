buildscript {
    repositories {
        mavenCentral()
    }
    configurations.maybeCreate('pitest')
    dependencies {
        pitest 'org.pitest:pitest-junit5-plugin:0.10'
    }
}

plugins {
    id 'cz.alenkacz.gradle.scalafmt' version '1.8.0' apply false
    id 'cz.augi.gradle.wartremover' version '0.9.10' apply false
    id 'info.solidsoft.pitest' version '1.4.5' apply false
    id 'me.champeau.gradle.jmh' version '0.4.8' apply false
    id 'net.ltgt.errorprone' version '1.1.1' apply false
    id 'net.researchgate.release' version '2.8.1'
    id 'ru.vyarus.animalsniffer' version '1.5.0' apply false
}

ext {
    assertjVersion = '3.13.2'
    checkstyleVersion = '8.25'
    errorproneJavacVersion = '9+181-r4173-1'
    errorproneVersion = '2.3.3'
    jacocoVersion = '0.8.4'
    jUnitVersion = '5.5.2'
    mockitoVersion = '3.1.0'

    def buildTimeAndDate = new Date()
    buildDate = buildTimeAndDate.format("yyyy-MM-dd")
    buildTime = buildTimeAndDate.format("HH:mm:ss.SSSZ")
}

subprojects {
    apply plugin: 'java-library'
    apply from: rootProject.file('gradle/animal-sniffer.gradle')
    apply from: rootProject.file('gradle/check-checkstyle.gradle')
    apply from: rootProject.file('gradle/check-codecoverage.gradle')
    if (!JavaVersion.current().isJava9Compatible()) {
        apply from: rootProject.file('gradle/check-errorprone.gradle')
    }
    apply from: rootProject.file('gradle/publish-jar.gradle')
    apply from: rootProject.file('gradle/publish-maven.gradle')

    sourceCompatibility = JavaVersion.VERSION_1_6

    repositories {
        mavenCentral()
    }

    // after gradle 5.3 we need to set this attribute to mark test configuration targeting java 8
    [configurations.testCompileClasspath, configurations.testRuntimeClasspath].each {
        it.attributes {
            attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 8)
        }
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:all' << '-Xlint:-options' << '-Werror'
    }

    test {
        useJUnitPlatform()
    }

    javadoc {
        source = sourceSets.main.allJava
        classpath = configurations.compileClasspath

        options.memberLevel = JavadocMemberLevel.PROTECTED
        options.links = ["https://docs.oracle.com/javase/6/docs/api/"]

        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    afterReleaseBuild.dependsOn publish
}

release {
    failOnCommitNeeded = false
    
    git {
        requireBranch = 'java6'
    }
}

task build {
}

configure(build) {
    group = BasePlugin.BUILD_GROUP
    description = 'Project build'
}

wrapper {
    gradleVersion = '5.6.3'
}
