ext {
    jUnitVersion = '4.12'
    mockitoVersion = '2.10.0'
    assertjVersion = '2.8.0'
    errorproneVersion = '2.1.1'
    checkstyleVersion = '8.2'

    def buildTimeAndDate = new Date()
    buildDate = buildTimeAndDate.format("yyyy-MM-dd")
    buildTime = buildTimeAndDate.format("HH:mm:ss.SSSZ")
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.11'
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'signing'
    apply plugin: 'net.ltgt.errorprone'
    apply from: rootProject.file('gradle/check-checkstyle.gradle')
    apply from: rootProject.file('gradle/check-codecoverage.gradle')
    apply from: rootProject.file('gradle/publish-jar.gradle')
    apply from: rootProject.file('gradle/publish-maven.gradle')

    sourceCompatibility = JavaVersion.VERSION_1_6

    repositories {
        mavenCentral()
    }

    configurations.errorprone {
        resolutionStrategy.force "com.google.errorprone:error_prone_core:$errorproneVersion"
    }

    dependencies {
        checkstyle "com.puppycrawl.tools:checkstyle:$checkstyleVersion"

        implementation "com.google.errorprone:error_prone_annotations:$errorproneVersion"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }

    signing {
        required {
            signatory != null && !(project.version =~ /-SNAPSHOT$/)
        }
        sign configurations.archives
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}
