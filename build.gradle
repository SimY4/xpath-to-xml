plugins {
    id 'com.diffplug.spotless' version '6.4.0' apply false
    id 'cz.augi.gradle.wartremover' version '0.15.1' apply false
    id 'info.solidsoft.pitest' version '1.7.4' apply false
    id 'me.champeau.jmh' version '0.6.6' apply false
    id 'net.ltgt.errorprone' version '2.0.2' apply false
    id 'net.researchgate.release' version '2.8.1'
    id 'ru.vyarus.animalsniffer' version '1.5.4' apply false
}

subprojects {
    apply plugin: 'java-library'
    apply from: rootProject.file('gradle/animal-sniffer.gradle')
    apply from: rootProject.file('gradle/check-checkstyle.gradle')
    apply from: rootProject.file('gradle/check-codecoverage.gradle')
    apply from: rootProject.file('gradle/check-errorprone.gradle')
    apply from: rootProject.file('gradle/publish-jar.gradle')
    apply from: rootProject.file('gradle/publish-maven.gradle')

    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6

    repositories {
        mavenCentral()
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    // after gradle 5.3 we need to set this attribute to mark test configuration targeting java 8
    [configurations.testCompileClasspath, configurations.testRuntimeClasspath].each {
        it.attributes {
            attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 8)
        }
    }

    compileJava {
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = 6
        }
        options.compilerArgs << '-Xlint:all,-options' << '-Werror'
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        if (JavaVersion.current().isJava9Compatible()) {
            options.release = 8
        }
    }

    test {
        useJUnitPlatform()
        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    }

    javadoc {
        options.memberLevel = JavadocMemberLevel.PROTECTED

        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
}

task build {
    group = 'build'
    description = 'Build All'
}

release {
    git {
        requireBranch = '2.x'
    }
}

wrapper {
    gradleVersion = '7.4.1'
}
