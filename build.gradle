buildscript {
    repositories {
        mavenCentral()
    }
    configurations.maybeCreate('pitest')
    dependencies {
        pitest 'org.pitest:pitest-junit5-plugin:0.8'
    }
}

plugins {
    id 'com.adtran.scala-multiversion-plugin' version '1.0.34' apply false
    id 'info.solidsoft.pitest' version '1.3.0' apply false
    id 'me.champeau.gradle.jmh' version '0.4.7' apply false
    id 'net.ltgt.errorprone' version '0.6' apply false
    id 'net.researchgate.release' version '2.7.0'
    id 'ru.vyarus.animalsniffer' version '1.4.6' apply false
}

ext {
    assertjVersion = '3.11.1'
    checkstyleVersion = '8.14'
    errorproneJavacVersion = '9+181-r4173-1'
    errorproneVersion = '2.3.2'
    jacocoVersion = '0.8.2'
    jUnitVersion = '5.3.1'
    mockitoVersion = '2.23.4'

    def buildTimeAndDate = new Date()
    buildDate = buildTimeAndDate.format("yyyy-MM-dd")
    buildTime = buildTimeAndDate.format("HH:mm:ss.SSSZ")
}

subprojects {
    apply plugin: 'java-library'
    apply from: rootProject.file('gradle/animal-sniffer.gradle')
    apply from: rootProject.file('gradle/check-checkstyle.gradle')
    apply from: rootProject.file('gradle/check-codecoverage.gradle')
    apply from: rootProject.file('gradle/check-errorprone.gradle')
    apply from: rootProject.file('gradle/publish-jar.gradle')
    apply from: rootProject.file('gradle/publish-maven.gradle')

    sourceCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all" << "-Xlint:-options" << "-Werror"
    }

    test {
        useJUnitPlatform()
    }

    javadoc {
        source = sourceSets.main.allJava
        classpath = configurations.compileClasspath

        options {
            setMemberLevel JavadocMemberLevel.PUBLIC
            setAuthor true

            links "https://docs.oracle.com/javase/6/docs/api/"
        }
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html4', true)
        }
    }

    afterReleaseBuild.dependsOn publish
}

task build {
}

configure(build) {
    group = BasePlugin.BUILD_GROUP
    description = 'Project build'
}

release {
    failOnCommitNeeded = false

    git {
        requireBranch = 'java6'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}
