buildscript {
    repositories {
        mavenCentral()
    }
    configurations.maybeCreate('pitest')
    dependencies {
        pitest 'org.pitest:pitest-junit5-plugin:0.8'
    }
}

plugins {
    id 'com.adtran.scala-multiversion-plugin' version '1.0.35' apply false
    id 'cz.alenkacz.gradle.scalafmt' version '1.8.0' apply false
    id 'info.solidsoft.pitest' version '1.4.0' apply false
    id 'me.champeau.gradle.jmh' version '0.4.8' apply false
    id 'net.ltgt.errorprone' version '0.7.1' apply false
    id 'net.researchgate.release' version '2.8.0'
    id 'ru.vyarus.animalsniffer' version '1.5.0' apply false
}

ext {
    assertjVersion = '3.12.2'
    checkstyleVersion = '8.19'
    errorproneVersion = '2.3.3'
    jacocoVersion = '0.8.3'
    jUnitVersion = '5.4.0'
    mockitoVersion = '2.25.1'

    def buildTimeAndDate = new Date()
    buildDate = buildTimeAndDate.format("yyyy-MM-dd")
    buildTime = buildTimeAndDate.format("HH:mm:ss.SSSZ")
}

subprojects {
    apply plugin: 'java-library'
    // apply from: rootProject.file('gradle/animal-sniffer.gradle')
    apply from: rootProject.file('gradle/check-checkstyle.gradle')
    apply from: rootProject.file('gradle/check-codecoverage.gradle')
    // apply from: rootProject.file('gradle/check-errorprone.gradle')
    apply from: rootProject.file('gradle/publish-jar.gradle')
    apply from: rootProject.file('gradle/publish-maven.gradle')

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:all' << '-Werror'
    }

    test {
        useJUnitPlatform()
    }

    javadoc {
        source = sourceSets.main.allJava
        classpath = configurations.compileClasspath

        options.memberLevel = JavadocMemberLevel.PROTECTED
        options.links = ["https://docs.oracle.com/javase/11/docs/api/"]
    }

    afterReleaseBuild.dependsOn publish
}

// DOM4J: Jaxen violates module isolation rules by having it's own org.w3c package. Therefore cannot be modularised.
configure(subprojects - project(':xpath-to-xml-dom4j') - project(':xpath-to-xml-scala')) {
    afterEvaluate {
        compileJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                ]
                classpath = files()
            }
        }
    }
}

task build {
}

configure(build) {
    group = BasePlugin.BUILD_GROUP
    description = 'Project build'
}

release {
    failOnCommitNeeded = false

    git {
        requireBranch = 'master'
    }
}

wrapper {
    gradleVersion = '5.3.1'
}
