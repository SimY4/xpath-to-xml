plugins {
    id 'net.researchgate.release' version '2.7.0'
    id 'net.ltgt.errorprone' version '0.6' apply false
    id 'ru.vyarus.animalsniffer' version '1.4.6' apply false
    id 'me.champeau.gradle.jmh' version '0.4.7' apply false
}

ext {
    assertjVersion = '3.11.1'
    checkstyleVersion = '8.12'
    errorproneJavacVersion = '9+181-r4173-1'
    errorproneVersion = '2.3.1'
    jacocoVersion = '0.8.2'
    jUnitVersion = '5.3.1'
    mockitoVersion = '2.22.0'

    def buildTimeAndDate = new Date()
    buildDate = buildTimeAndDate.format("yyyy-MM-dd")
    buildTime = buildTimeAndDate.format("HH:mm:ss.SSSZ")
}

subprojects {
    apply plugin: 'java-library'
    // apply from: rootProject.file('gradle/animal-sniffer.gradle')
    apply from: rootProject.file('gradle/check-checkstyle.gradle')
    apply from: rootProject.file('gradle/check-codecoverage.gradle')
    apply from: rootProject.file('gradle/check-errorprone.gradle')
    apply from: rootProject.file('gradle/publish-jar.gradle')
    apply from: rootProject.file('gradle/publish-maven.gradle')

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all" << "-Werror"
    }

    test {
        useJUnitPlatform()
    }

    javadoc {
        source = sourceSets.main.allJava
        classpath = configurations.compileClasspath

        options {
            setMemberLevel JavadocMemberLevel.PUBLIC
            setAuthor true

            links "https://docs.oracle.com/javase/11/docs/api/"
        }
    }

    afterReleaseBuild.dependsOn publish
}

task build {
}

release {
    failOnCommitNeeded = false

    git {
        requireBranch = 'master'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}
