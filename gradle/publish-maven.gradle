apply plugin: 'maven-publish'
apply plugin: 'signing'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            afterEvaluate {
                artifactId = project.name
                pom {
                    name = project.name
                    description = projectDescription
                    url = 'http://github.com/SimY4/xpath-to-xml'
                    inceptionYear = '2017'

                    scm {
                        connection = projectScm
                        developerConnection = projectScm
                        url = projectUrl
                    }

                    issueManagement {
                        system = 'GitHub'
                        url = projectIssues
                    }

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'SimY4'
                            name = 'Alex Simkin'
                            url = 'http://github.com/SimY4'
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

def signingKey = System.getenv("GPG_SECRET_KEY")
def signingPassword = System.getenv("GPG_SECRET_KEY_PASSWORD")

signing {
    if (signingKey != null && signingPassword != null && !signingKey.isEmpty() && !signingPassword.isEmpty()) {
        useInMemoryPgpKeys(signingKey, signingPassword)
    }
    sign publishing.publications.mavenJava
}
